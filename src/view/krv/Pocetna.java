/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.krv;

import controler.dretve.DretvaIzvrsavanjeRemote;
import controler.dretve.DretvaAzuriranjeKalendara;
import controler.dretve.DretvaSat;
import controler.kalendar.MetodeDogadaja;
import static controler.kalendar.MetodeDogadaja.generirajKalendar;
import controler.kalendar.MetodeKalendara;
import controler.meteo.MetodeMeteo;
import java.awt.Button;
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import model.kalendar.Datum;
import model.kalendar.Dogadaj;
import model.remote.Tajmer;
import view.remote.OdabirBojeZarulje;

/**
 *
 * @author iduras
 */
public class Pocetna extends javax.swing.JFrame {

    static List<List<Datum>> listaListaDatuma = new ArrayList<List<Datum>>();
    
    Date danasnjiDatum = new Date(System.currentTimeMillis());
    
    int tekucaGodina = Calendar.getInstance().get(Calendar.YEAR);
    
    Tajmer tajmerZaPoruke = new Tajmer(0, 0, "");
    
    boolean lampicaUkljucena = true;
    boolean oznaciSve = true;
    public static List<List<Tajmer>> listaListaTajmera = new ArrayList<List<Tajmer>>();
    public static List<Tajmer> listaTajmeraLampice = new ArrayList<Tajmer>();
    public static List<Tajmer> listaTajmeraStekera = new ArrayList<Tajmer>();
    public static List<Tajmer> listaTajmeraMasine = new ArrayList<Tajmer>();
    public static List<Tajmer> listaTajmeraZarulje = new ArrayList<Tajmer>();
    static DretvaIzvrsavanjeRemote dretva = DretvaIzvrsavanjeRemote.getDretva();  
    /**
     * Creates new form Pocetna
     */
    public Pocetna() {
        initComponents();
        setBackground(new Color(0, 0, 0, 200));
        DretvaSat.getInstanca().start();
        DretvaAzuriranjeKalendara.getInstanca().start();
        try {
            MetodeKalendara.generirajPrikaz(MetodeKalendara.getURLKalendaraGooglePosao(), Dogadaj.getListaSvihDogadaja(), jTableKalendar, jTableTablicaDogadaja, jTableTablicaDogadajaZaTjedanDana, jTextFieldGodina, listaListaDatuma, Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.MONTH) + 1, Calendar.getInstance().get(Calendar.YEAR));
            MetodeMeteo.generirajPrikazMeteo("Varazdin", "HR", Pocetna.getjPanelDanas(), Pocetna.getjPanePrognoza());
        } 
        
        catch (Exception e) {
            Pocetna.getjTextFieldPoruka().setText("Greška. Pokušaj kliknuti na gumb 'Osvježi'.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jTextFieldDanasnjiDatum = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableKalendar = new javax.swing.JTable();
        jTextFieldPoruka = new javax.swing.JTextField();
        jButtonPrijasnjiMjesec = new javax.swing.JButton();
        jButtonSljedeciMjesec = new javax.swing.JButton();
        jComboBoxMjeseci = new javax.swing.JComboBox<>();
        jTextFieldGodina = new javax.swing.JTextField();
        jButtonDanas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTablicaDogadaja = new javax.swing.JTable();
        jLabelOdabraniDatum = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTablicaDogadajaZaTjedanDana = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonOsvjezi = new javax.swing.JButton();
        jPanelDanas = new javax.swing.JPanel();
        jPanePrognoza = new javax.swing.JPanel();
        jTabbedPaneLog = new javax.swing.JTabbedPane();
        jPanelUticnice = new javax.swing.JPanel();
        jRadioButtonUticniceLampicaON = new javax.swing.JRadioButton();
        jRadioButtonUticniceLampicaOFF = new javax.swing.JRadioButton();
        jTextUticniceLampicaMin = new javax.swing.JTextField();
        jTextUticniceLampicaSec = new javax.swing.JTextField();
        jButtonUticniceLampicaPokreni = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButtonUticniceStekerON = new javax.swing.JRadioButton();
        jRadioButtonUticniceStekerOFF = new javax.swing.JRadioButton();
        jTextUticniceStekerMin = new javax.swing.JTextField();
        jTextUticniceStekerSec = new javax.swing.JTextField();
        jButtonUticniceStekerPokreni = new javax.swing.JButton();
        jCheckBoxUticniceLampica = new javax.swing.JCheckBox();
        jCheckBoxUticniceSteker = new javax.swing.JCheckBox();
        jButtonUticniceUkljuciOznaceneUticnice = new javax.swing.JButton();
        jButtonUticniceIskljuciOznaceneUticnice = new javax.swing.JButton();
        jButtonUticniceOznaciSve = new javax.swing.JButton();
        jCheckBoxUticniceMasina = new javax.swing.JCheckBox();
        jRadioButtonUticniceMasinaON = new javax.swing.JRadioButton();
        jRadioButtonUticniceMasinaOFF = new javax.swing.JRadioButton();
        jButtonMasinaPokreni = new javax.swing.JButton();
        jTextFieldUticniceMasinaMin = new javax.swing.JTextField();
        jTextFieldUticniceMasinaSec = new javax.swing.JTextField();
        jPanelRasvjeta = new javax.swing.JPanel();
        jCheckBoxRasvjetaZarulja = new javax.swing.JCheckBox();
        jRadioButtonRasvjetaZaruljaON = new javax.swing.JRadioButton();
        jRadioButtonRasvjetaZaruljaOFF = new javax.swing.JRadioButton();
        jButtonRasvjetaZaruljaOdabirBoje = new java.awt.Button();
        jButtonRasvjetaZaruljaPokreni = new javax.swing.JButton();
        jTextRasvjetaZaruljaMin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextRasvjetaZaruljaSec = new javax.swing.JTextField();
        jPanelTajmeri = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableTajmeriTablicaTajmera = new javax.swing.JTable();
        jButtonTajmeriObrisiTajmereStekera = new javax.swing.JButton();
        jButtonTajmeriObrisiTajmereLampice = new javax.swing.JButton();
        jButtonTajmeriObrisiTajmereZarulje = new javax.swing.JButton();
        jPanelLog = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableLogTablicaLoga = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.gray);
        setLocation(new java.awt.Point(1230, 61));
        setUndecorated(true);

        jTextFieldDanasnjiDatum.setEditable(false);
        jTextFieldDanasnjiDatum.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldDanasnjiDatum.setText("jTextField1");
        jTextFieldDanasnjiDatum.setToolTipText("Trenutni datum i vrijeme");
        jTextFieldDanasnjiDatum.setAutoscrolls(false);
        jTextFieldDanasnjiDatum.setFocusable(false);
        jTextFieldDanasnjiDatum.setOpaque(false);
        jTextFieldDanasnjiDatum.setBackground(new java.awt.Color(240, 240, 240, 50));

        jTableKalendar.setBackground(new java.awt.Color(153, 153, 153, 150));
        jTableKalendar.setShowHorizontalLines(true);
        jTableKalendar.setShowVerticalLines(true);
        jTableKalendar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota", "Nedjelja"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableKalendar.setColumnSelectionAllowed(true);
        jTableKalendar.setGridColor(new java.awt.Color(51, 51, 51));
        jTableKalendar.setOpaque(false);
        jTableKalendar.getTableHeader().setReorderingAllowed(false);
        jTableKalendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableKalendarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableKalendar);
        jTableKalendar.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTableKalendar.getColumnModel().getColumnCount() > 0) {
            jTableKalendar.getColumnModel().getColumn(0).setResizable(false);
            jTableKalendar.getColumnModel().getColumn(1).setResizable(false);
            jTableKalendar.getColumnModel().getColumn(2).setResizable(false);
            jTableKalendar.getColumnModel().getColumn(3).setResizable(false);
            jTableKalendar.getColumnModel().getColumn(4).setResizable(false);
            jTableKalendar.getColumnModel().getColumn(5).setResizable(false);
            jTableKalendar.getColumnModel().getColumn(6).setResizable(false);
        }

        jTextFieldPoruka.setEditable(false);
        jTextFieldPoruka.setBackground(new java.awt.Color(102, 102, 102, 100));
        jTextFieldPoruka.setForeground(java.awt.Color.white);
        jTextFieldPoruka.setOpaque(false);

        jButtonPrijasnjiMjesec.setBackground(new java.awt.Color(240, 240, 240, 100));
        jButtonPrijasnjiMjesec.setText("<-");
        jButtonPrijasnjiMjesec.setOpaque(false);
        jButtonPrijasnjiMjesec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrijasnjiMjesecActionPerformed(evt);
            }
        });

        jButtonSljedeciMjesec.setText("->");
        jButtonSljedeciMjesec.setOpaque(false);
        jButtonSljedeciMjesec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSljedeciMjesecActionPerformed(evt);
            }
        });

        jComboBoxMjeseci.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  "Siječanj", "Veljača", "Ožujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac" }));
        jComboBoxMjeseci.setOpaque(false);
        jComboBoxMjeseci.setSelectedIndex(Calendar.getInstance().get(Calendar.MONTH));
        jComboBoxMjeseci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMjeseciActionPerformed(evt);
            }
        });

        jTextFieldGodina.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldGodina.setText(Integer.toString(tekucaGodina));
        jTextFieldGodina.setOpaque(false);

        jButtonDanas.setText("Danas");
        jButtonDanas.setOpaque(false);
        jButtonDanas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDanasActionPerformed(evt);
            }
        });

        jTableTablicaDogadaja.setBackground(new java.awt.Color(153, 153, 153, 150));
        jTableTablicaDogadaja.setShowHorizontalLines(true);
        jTableTablicaDogadaja.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTableTablicaDogadaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Opis", "Lokacija", "Počinje", "Završava"
            }
        ));
        jTableTablicaDogadaja.setOpaque(false);
        jScrollPane2.setViewportView(jTableTablicaDogadaja);

        jLabelOdabraniDatum.setForeground(new java.awt.Color(255, 255, 255));
        jLabelOdabraniDatum.setText("Događaji odabranog datuma:");

        jTableTablicaDogadajaZaTjedanDana.setBackground(new java.awt.Color(153, 153, 153));
        jTableTablicaDogadajaZaTjedanDana.setShowHorizontalLines(true);
        jTableTablicaDogadajaZaTjedanDana.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTableTablicaDogadajaZaTjedanDana.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Opis", "Lokacija", "Počinje", "Završava"
            }
        ));
        jTableTablicaDogadajaZaTjedanDana.setMaximumSize(new java.awt.Dimension(300, 0));
        jTableTablicaDogadajaZaTjedanDana.setOpaque(false);
        jScrollPane3.setViewportView(jTableTablicaDogadajaZaTjedanDana);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Događaji za sljedećih 7 dana:");

        jButtonOsvjezi.setText("Osvježi");
        jButtonOsvjezi.setOpaque(false);
        jButtonOsvjezi.setPreferredSize(new java.awt.Dimension(73, 23));
        jButtonOsvjezi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOsvjeziActionPerformed(evt);
            }
        });

        jPanelDanas.setBackground(new java.awt.Color(102, 102, 102, 150));
        jPanelDanas.setForeground(new java.awt.Color(255, 255, 255));
        jPanelDanas.setToolTipText("Prikaz trenutnih vremenskih uvijeta.");
        jPanelDanas.setMaximumSize(new java.awt.Dimension(50, 32767));
        jPanelDanas.setPreferredSize(new java.awt.Dimension(180, 0));

        javax.swing.GroupLayout jPanelDanasLayout = new javax.swing.GroupLayout(jPanelDanas);
        jPanelDanas.setLayout(jPanelDanasLayout);
        jPanelDanasLayout.setHorizontalGroup(
            jPanelDanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelDanasLayout.setVerticalGroup(
            jPanelDanasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );

        jPanePrognoza.setBackground(new java.awt.Color(102, 102, 102, 150));
        jPanePrognoza.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanePrognozaLayout = new javax.swing.GroupLayout(jPanePrognoza);
        jPanePrognoza.setLayout(jPanePrognozaLayout);
        jPanePrognozaLayout.setHorizontalGroup(
            jPanePrognozaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanePrognozaLayout.setVerticalGroup(
            jPanePrognozaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
        );

        jTabbedPaneLog.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Remote", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255)));
        jTabbedPaneLog.setBackground(new Color(0, 0, 0, 100));
        jTabbedPaneLog.setUI(new javax.swing.plaf.basic.BasicTabbedPaneUI(){
            protected void paintContentBorder(Graphics g,int tabPlacement,int selectedIndex){}
        });
        jTabbedPaneLog.setForeground(new java.awt.Color(255, 255, 255));

        jPanelUticnice.setBackground(new Color(0, 0, 0, 0));

        buttonGroup1.add(jRadioButtonUticniceLampicaON);
        jRadioButtonUticniceLampicaON.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonUticniceLampicaON.setText("ON");
        jRadioButtonUticniceLampicaON.setOpaque(false);
        jRadioButtonUticniceLampicaON.setSelected(true);
        jRadioButtonUticniceLampicaON.setActionCommand("LampicaONWH");

        buttonGroup1.add(jRadioButtonUticniceLampicaOFF);
        jRadioButtonUticniceLampicaOFF.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonUticniceLampicaOFF.setText("OFF");
        jRadioButtonUticniceLampicaOFF.setOpaque(false);
        jRadioButtonUticniceLampicaOFF.setActionCommand("LampicaOFFWH");

        jTextUticniceLampicaMin.setForeground(new java.awt.Color(255, 255, 255));
        jTextUticniceLampicaMin.setText("0");
        jTextUticniceLampicaMin.setOpaque(false);

        jTextUticniceLampicaSec.setForeground(new java.awt.Color(255, 255, 255));
        jTextUticniceLampicaSec.setText("0");
        jTextUticniceLampicaSec.setOpaque(false);

        jButtonUticniceLampicaPokreni.setText("pokreni");
        jButtonUticniceLampicaPokreni.setOpaque(false);
        jButtonUticniceLampicaPokreni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUticniceLampicaPokreniActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("min");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("sec");

        buttonGroup2.add(jRadioButtonUticniceStekerON);
        jRadioButtonUticniceStekerON.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonUticniceStekerON.setText("ON");
        jRadioButtonUticniceStekerON.setOpaque(false);
        jRadioButtonUticniceStekerON.setSelected(true);
        jRadioButtonUticniceStekerON.setActionCommand("StekerONWH");

        buttonGroup2.add(jRadioButtonUticniceStekerOFF);
        jRadioButtonUticniceStekerOFF.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonUticniceStekerOFF.setText("OFF");
        jRadioButtonUticniceStekerOFF.setOpaque(false);
        jRadioButtonUticniceStekerOFF.setActionCommand("StekerOFFWH");

        jTextUticniceStekerMin.setForeground(new java.awt.Color(255, 255, 255));
        jTextUticniceStekerMin.setText("0");
        jTextUticniceStekerMin.setOpaque(false);

        jTextUticniceStekerSec.setForeground(new java.awt.Color(255, 255, 255));
        jTextUticniceStekerSec.setText("0");
        jTextUticniceStekerSec.setOpaque(false);

        jButtonUticniceStekerPokreni.setText("pokreni");
        jButtonUticniceStekerPokreni.setOpaque(false);
        jButtonUticniceStekerPokreni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUticniceStekerPokreniActionPerformed(evt);
            }
        });

        jCheckBoxUticniceLampica.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxUticniceLampica.setText("Lampica");
        jCheckBoxUticniceLampica.setOpaque(false);

        jCheckBoxUticniceSteker.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxUticniceSteker.setText("Šteker");
        jCheckBoxUticniceSteker.setOpaque(false);

        jButtonUticniceUkljuciOznaceneUticnice.setText("uključi označene");
        jButtonUticniceUkljuciOznaceneUticnice.setOpaque(false);
        jButtonUticniceUkljuciOznaceneUticnice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUticniceUkljuciOznaceneUticniceActionPerformed(evt);
            }
        });

        jButtonUticniceIskljuciOznaceneUticnice.setText("isključi označene");
        jButtonUticniceIskljuciOznaceneUticnice.setOpaque(false);
        jButtonUticniceIskljuciOznaceneUticnice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUticniceIskljuciOznaceneUticniceActionPerformed(evt);
            }
        });

        jButtonUticniceOznaciSve.setText("označi sve");
        jButtonUticniceOznaciSve.setOpaque(false);
        jButtonUticniceOznaciSve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUticniceOznaciSveActionPerformed(evt);
            }
        });

        jCheckBoxUticniceMasina.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxUticniceMasina.setText("Mašina");
        jCheckBoxUticniceMasina.setOpaque(false);

        buttonGroup3.add(jRadioButtonUticniceMasinaON);
        jRadioButtonUticniceMasinaON.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonUticniceMasinaON.setText("ON");
        jRadioButtonUticniceMasinaON.setOpaque(false);
        jRadioButtonUticniceMasinaON.setSelected(true);
        jRadioButtonUticniceMasinaON.setActionCommand("MasinaONWH");

        buttonGroup3.add(jRadioButtonUticniceMasinaOFF);
        jRadioButtonUticniceMasinaOFF.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonUticniceMasinaOFF.setText("OFF");
        jRadioButtonUticniceMasinaOFF.setOpaque(false);
        jRadioButtonUticniceMasinaOFF.setActionCommand("MasinaOFFWH");

        jButtonMasinaPokreni.setText("pokreni");
        jButtonMasinaPokreni.setOpaque(false);
        jButtonMasinaPokreni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMasinaPokreniActionPerformed(evt);
            }
        });

        jTextFieldUticniceMasinaMin.setEditable(false);
        jTextFieldUticniceMasinaMin.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldUticniceMasinaMin.setText("0");
        jTextFieldUticniceMasinaMin.setOpaque(false);

        jTextFieldUticniceMasinaSec.setEditable(false);
        jTextFieldUticniceMasinaSec.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldUticniceMasinaSec.setText("0");
        jTextFieldUticniceMasinaSec.setOpaque(false);

        javax.swing.GroupLayout jPanelUticniceLayout = new javax.swing.GroupLayout(jPanelUticnice);
        jPanelUticnice.setLayout(jPanelUticniceLayout);
        jPanelUticniceLayout.setHorizontalGroup(
            jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUticniceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonUticniceUkljuciOznaceneUticnice)
                    .addComponent(jButtonUticniceIskljuciOznaceneUticnice)
                    .addGroup(jPanelUticniceLayout.createSequentialGroup()
                        .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanelUticniceLayout.createSequentialGroup()
                                .addComponent(jCheckBoxUticniceMasina)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButtonUticniceMasinaON))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelUticniceLayout.createSequentialGroup()
                                .addComponent(jCheckBoxUticniceSteker)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButtonUticniceStekerON))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelUticniceLayout.createSequentialGroup()
                                .addComponent(jCheckBoxUticniceLampica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonUticniceLampicaON)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelUticniceLayout.createSequentialGroup()
                                .addComponent(jRadioButtonUticniceLampicaOFF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextUticniceLampicaMin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelUticniceLayout.createSequentialGroup()
                                        .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanelUticniceLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jTextUticniceLampicaSec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTextUticniceStekerSec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanelUticniceLayout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jTextFieldUticniceMasinaSec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonUticniceStekerPokreni)
                                            .addComponent(jButtonUticniceLampicaPokreni)
                                            .addComponent(jButtonMasinaPokreni)))
                                    .addGroup(jPanelUticniceLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel4))))
                            .addGroup(jPanelUticniceLayout.createSequentialGroup()
                                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonUticniceStekerOFF)
                                    .addComponent(jRadioButtonUticniceMasinaOFF))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldUticniceMasinaMin)
                                    .addComponent(jTextUticniceStekerMin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jButtonUticniceOznaciSve))
                .addContainerGap(337, Short.MAX_VALUE))
        );
        jPanelUticniceLayout.setVerticalGroup(
            jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUticniceLayout.createSequentialGroup()
                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxUticniceLampica)
                    .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonUticniceLampicaON)
                        .addComponent(jRadioButtonUticniceLampicaOFF)
                        .addComponent(jTextUticniceLampicaMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonUticniceLampicaPokreni)
                        .addComponent(jTextUticniceLampicaSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxUticniceSteker)
                    .addComponent(jRadioButtonUticniceStekerON)
                    .addComponent(jRadioButtonUticniceStekerOFF)
                    .addComponent(jTextUticniceStekerMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUticniceStekerPokreni)
                    .addComponent(jTextUticniceStekerSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelUticniceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxUticniceMasina)
                    .addComponent(jRadioButtonUticniceMasinaON)
                    .addComponent(jRadioButtonUticniceMasinaOFF)
                    .addComponent(jTextFieldUticniceMasinaMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMasinaPokreni)
                    .addComponent(jTextFieldUticniceMasinaSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonUticniceUkljuciOznaceneUticnice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUticniceIskljuciOznaceneUticnice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUticniceOznaciSve)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneLog.addTab("utičnice", jPanelUticnice);

        jPanelRasvjeta.setBackground(new Color(0, 0, 0, 0));

        jCheckBoxRasvjetaZarulja.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxRasvjetaZarulja.setText("Žarulja");
        jCheckBoxRasvjetaZarulja.setOpaque(false);
        jCheckBoxRasvjetaZarulja.setPreferredSize(new java.awt.Dimension(63, 23));

        buttonGroup4.add(jRadioButtonRasvjetaZaruljaON);
        jRadioButtonRasvjetaZaruljaON.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonRasvjetaZaruljaON.setText("ON");
        jRadioButtonRasvjetaZaruljaON.setOpaque(false);
        jRadioButtonRasvjetaZaruljaON.setSelected(true);
        jRadioButtonRasvjetaZaruljaON.setActionCommand("ZaruljaONWH");

        buttonGroup4.add(jRadioButtonRasvjetaZaruljaOFF);
        jRadioButtonRasvjetaZaruljaOFF.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonRasvjetaZaruljaOFF.setText("OFF");
        jRadioButtonRasvjetaZaruljaOFF.setOpaque(false);
        jRadioButtonRasvjetaZaruljaOFF.setActionCommand("ZaruljaOFFWH");

        jButtonRasvjetaZaruljaOdabirBoje.setActionCommand("boja");
        jButtonRasvjetaZaruljaOdabirBoje.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jButtonRasvjetaZaruljaOdabirBoje.setLabel("boja");
        jButtonRasvjetaZaruljaOdabirBoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRasvjetaZaruljaOdabirBojeActionPerformed(evt);
            }
        });

        jButtonRasvjetaZaruljaPokreni.setText("pokreni");
        jButtonRasvjetaZaruljaPokreni.setOpaque(false);
        jButtonRasvjetaZaruljaPokreni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRasvjetaZaruljaPokreniActionPerformed(evt);
            }
        });

        jTextRasvjetaZaruljaMin.setForeground(new java.awt.Color(255, 255, 255));
        jTextRasvjetaZaruljaMin.setText("0");
        jTextRasvjetaZaruljaMin.setOpaque(false);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("min");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("sec");

        jTextRasvjetaZaruljaSec.setForeground(new java.awt.Color(255, 255, 255));
        jTextRasvjetaZaruljaSec.setText("0");
        jTextRasvjetaZaruljaSec.setOpaque(false);

        javax.swing.GroupLayout jPanelRasvjetaLayout = new javax.swing.GroupLayout(jPanelRasvjeta);
        jPanelRasvjeta.setLayout(jPanelRasvjetaLayout);
        jPanelRasvjetaLayout.setHorizontalGroup(
            jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRasvjetaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxRasvjetaZarulja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonRasvjetaZaruljaON)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonRasvjetaZaruljaOFF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRasvjetaLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(19, 19, 19))
                    .addComponent(jTextRasvjetaZaruljaMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRasvjetaLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel6))
                    .addGroup(jPanelRasvjetaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextRasvjetaZaruljaSec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRasvjetaZaruljaOdabirBoje, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRasvjetaZaruljaPokreni)))
                .addContainerGap(284, Short.MAX_VALUE))
        );
        jPanelRasvjetaLayout.setVerticalGroup(
            jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRasvjetaLayout.createSequentialGroup()
                .addGroup(jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRasvjetaLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCheckBoxRasvjetaZarulja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButtonRasvjetaZaruljaON)
                                .addComponent(jRadioButtonRasvjetaZaruljaOFF)
                                .addComponent(jTextRasvjetaZaruljaMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextRasvjetaZaruljaSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelRasvjetaLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jButtonRasvjetaZaruljaPokreni))
                            .addComponent(jButtonRasvjetaZaruljaOdabirBoje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelRasvjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)))
                .addGap(335, 335, 335))
        );

        jTabbedPaneLog.addTab("rasvjeta", jPanelRasvjeta);

        jTableTajmeriTablicaTajmera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Događaj", "Minuta", "Sekunda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTajmeriTablicaTajmera.setOpaque(false);
        jScrollPane5.setViewportView(jTableTajmeriTablicaTajmera);

        jButtonTajmeriObrisiTajmereStekera.setText("Obriši tajmere štekera");
        jButtonTajmeriObrisiTajmereStekera.setOpaque(false);
        jButtonTajmeriObrisiTajmereStekera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTajmeriObrisiTajmereStekeraActionPerformed(evt);
            }
        });

        jButtonTajmeriObrisiTajmereLampice.setText("Obriši tajmere lampice");
        jButtonTajmeriObrisiTajmereLampice.setOpaque(false);
        jButtonTajmeriObrisiTajmereLampice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTajmeriObrisiTajmereLampiceActionPerformed(evt);
            }
        });

        jButtonTajmeriObrisiTajmereZarulje.setText("Obriši tajmere žarulje");
        jButtonTajmeriObrisiTajmereZarulje.setOpaque(false);
        jButtonTajmeriObrisiTajmereZarulje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTajmeriObrisiTajmereZaruljeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTajmeriLayout = new javax.swing.GroupLayout(jPanelTajmeri);
        jPanelTajmeri.setLayout(jPanelTajmeriLayout);
        jPanelTajmeriLayout.setHorizontalGroup(
            jPanelTajmeriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTajmeriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonTajmeriObrisiTajmereStekera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTajmeriObrisiTajmereLampice, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTajmeriObrisiTajmereZarulje, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(214, Short.MAX_VALUE))
            .addGroup(jPanelTajmeriLayout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanelTajmeriLayout.setVerticalGroup(
            jPanelTajmeriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTajmeriLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTajmeriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTajmeriObrisiTajmereStekera)
                    .addComponent(jButtonTajmeriObrisiTajmereLampice)
                    .addComponent(jButtonTajmeriObrisiTajmereZarulje))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPaneLog.addTab("tajmeri", jPanelTajmeri);

        jTableLogTablicaLoga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Događaj", "Trajanje u sec", "Početak", "Kraj"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLogTablicaLoga.setOpaque(false);
        jScrollPane6.setViewportView(jTableLogTablicaLoga);

        javax.swing.GroupLayout jPanelLogLayout = new javax.swing.GroupLayout(jPanelLog);
        jPanelLog.setLayout(jPanelLogLayout);
        jPanelLogLayout.setHorizontalGroup(
            jPanelLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
        );
        jPanelLogLayout.setVerticalGroup(
            jPanelLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        jTabbedPaneLog.addTab("log", jPanelLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelOdabraniDatum, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanePrognoza, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTabbedPaneLog)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTextFieldDanasnjiDatum)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonPrijasnjiMjesec)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBoxMjeseci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldGodina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonSljedeciMjesec)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonDanas)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonOsvjezi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPoruka, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelDanas, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldPoruka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonPrijasnjiMjesec)
                            .addComponent(jTextFieldDanasnjiDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxMjeseci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldGodina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSljedeciMjesec)
                            .addComponent(jButtonDanas)
                            .addComponent(jButtonOsvjezi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelDanas, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanePrognoza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelOdabraniDatum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPaneLog, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Mjenjanje pregleda mjeseca unatrag.
     * @param evt - klik na gumb
     */
    private void jButtonPrijasnjiMjesecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrijasnjiMjesecActionPerformed
        int mjesec = jComboBoxMjeseci.getSelectedIndex() + 1;
        
        mjesec--;
        if (mjesec == 0) {
            mjesec = 12;
            tekucaGodina--;
            jTextFieldGodina.setText(Integer.toString(tekucaGodina));
        }
        jComboBoxMjeseci.setSelectedIndex(mjesec - 1);
        generirajKalendar(jTableKalendar, listaListaDatuma, mjesec, tekucaGodina);
    }//GEN-LAST:event_jButtonPrijasnjiMjesecActionPerformed

    /**
     * Mjenjanje pregleda mjeseca unaprijed.
     * @param evt - klik na gumb
     */
    private void jButtonSljedeciMjesecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSljedeciMjesecActionPerformed
        //dohvacanje trenutnog mjeseca iz comboboxa
        int mjesec = jComboBoxMjeseci.getSelectedIndex() + 1;
        
        //uvecavanje mjeseca
        mjesec++;
        
        //ako mjesec prede 12., resetira se na 1. i povecava se godina
        if (mjesec == 13) {
            mjesec = 1;
            tekucaGodina++;
            jTextFieldGodina.setText(Integer.toString(tekucaGodina));
        }
        
        //selektira se odgovarajuci dan i generira kalendar
        jComboBoxMjeseci.setSelectedIndex(mjesec - 1);
        generirajKalendar(jTableKalendar, listaListaDatuma, mjesec, tekucaGodina);
    }//GEN-LAST:event_jButtonSljedeciMjesecActionPerformed

    /**
     * Pozicionira kalendar na današnji dan.
     * @param evt klik na gumb
     */
    private void jButtonDanasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDanasActionPerformed
        jTextFieldGodina.setText(Integer.toString(Calendar.getInstance().get(Calendar.YEAR)));
        jComboBoxMjeseci.setSelectedIndex(Calendar.getInstance().get(Calendar.MONTH));
        tekucaGodina = Calendar.getInstance().get(Calendar.YEAR);
        generirajKalendar(jTableKalendar,listaListaDatuma,Calendar.getInstance().get(Calendar.MONTH) + 1,Calendar.getInstance().get(Calendar.YEAR));
        MetodeDogadaja.generirajPrikazDogadajaDatuma(Pocetna.getjTableTablicaDogadaja(), MetodeKalendara.getListaDanas());
    }//GEN-LAST:event_jButtonDanasActionPerformed

    private void jComboBoxMjeseciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMjeseciActionPerformed
        generirajKalendar(jTableKalendar,listaListaDatuma, jComboBoxMjeseci.getSelectedIndex() + 1, Calendar.getInstance().get(Calendar.YEAR));
    }//GEN-LAST:event_jComboBoxMjeseciActionPerformed

    private void jTableKalendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableKalendarMouseClicked
        int indexTjedan = jTableKalendar.getSelectedRow();
        int indexDan = jTableKalendar.getSelectedColumn();
        
        MetodeKalendara.azurirajPrikaz(Dogadaj.getListaSvihDogadaja(), jTableKalendar, jTextFieldGodina, listaListaDatuma,  jComboBoxMjeseci.getSelectedIndex()+1, Integer.parseInt(jTextFieldGodina.getText()));
        
        List<Dogadaj> listaDogadaja = listaListaDatuma.get(indexTjedan).get(indexDan).getListaDogadajaDatuma();
        getjLabelOdabraniDatum().setText("Prikaz događaja za " + listaListaDatuma.get(indexTjedan).get(indexDan).dajDatum() + ":");
        
        MetodeDogadaja.generirajPrikazDogadajaDatuma(jTableTablicaDogadaja, listaDogadaja);
    }//GEN-LAST:event_jTableKalendarMouseClicked

    private void jButtonOsvjeziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOsvjeziActionPerformed
        try {
            MetodeKalendara.generirajPrikaz(MetodeKalendara.getURLKalendaraGooglePosao(), Dogadaj.getListaSvihDogadaja(), jTableKalendar, jTableTablicaDogadaja, jTableTablicaDogadajaZaTjedanDana, jTextFieldGodina, listaListaDatuma, Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.MONTH) + 1, Calendar.getInstance().get(Calendar.YEAR));
            MetodeMeteo.generirajPrikazMeteo("Varazdin", "HR", Pocetna.getjPanelDanas(), Pocetna.getjPanePrognoza());
        } 
        
        catch (Exception e) {
            Pocetna.getjTextFieldPoruka().setText("Greška kod osvježavanja.");
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButtonOsvjeziActionPerformed

    private void jButtonRasvjetaZaruljaPokreniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRasvjetaZaruljaPokreniActionPerformed
        //ako je dretva završila s radom, ponovno ju pokreće
        if (!dretva.isAlive()) {
            dretva.run();
        }

        //provjera jesu li upisani dobri parametri
        try{

            Tajmer tajmer = new Tajmer(0, 0, "");

            if (buttonGroup4.getSelection().getActionCommand().equals("ZaruljaOFFWH")) {
                tajmer = new Tajmer(Integer.parseInt(jTextRasvjetaZaruljaMin.getText()), Integer.parseInt(jTextRasvjetaZaruljaSec.getText()), "ZaruljaOFFWH");
                listaTajmeraZarulje.add(tajmer);
                tajmer.provjeraRezultata("Dodan tajmer: ZaruljaOFFWH", 1);
            }

            else {
                tajmer = new Tajmer(Integer.parseInt(jTextRasvjetaZaruljaMin.getText()), Integer.parseInt(jTextRasvjetaZaruljaSec.getText()), OdabirBojeZarulje.odabranaBoja);
                listaTajmeraZarulje.add(tajmer);
                tajmer.provjeraRezultata("Dodan tajmer: " + OdabirBojeZarulje.odabranaBoja, 1);
            }

        }

        //ako nisu upisani, javlja se porukom
        catch(NumberFormatException e){
            tajmerZaPoruke.provjeraRezultata("Upiši minute i sekunde brojkama!", 0);
        }
    }//GEN-LAST:event_jButtonRasvjetaZaruljaPokreniActionPerformed

    private void jButtonRasvjetaZaruljaOdabirBojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRasvjetaZaruljaOdabirBojeActionPerformed
        String args[] = null;
        OdabirBojeZarulje.main(args);
    }//GEN-LAST:event_jButtonRasvjetaZaruljaOdabirBojeActionPerformed

    private void jButtonMasinaPokreniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMasinaPokreniActionPerformed
        //ako je dretva završila s radom, ponovno ju pokreće
        if (!dretva.isAlive()) {
            dretva.run();
        }

        //provjera jesu li upisani dobri parametri
        try{
            Tajmer tajmer = new Tajmer(0, 0, buttonGroup3.getSelection().getActionCommand());
            listaTajmeraLampice.add(tajmer);
            tajmer.provjeraRezultata("Dodan tajmer: " + buttonGroup3.getSelection().getActionCommand(), 1);

        }

        //ako nisu upisani, javlja se porukom
        catch(Exception e){
            tajmerZaPoruke.provjeraRezultata("Upiši minute i sekunde brojkama!", 0);
        }
    }//GEN-LAST:event_jButtonMasinaPokreniActionPerformed

    private void jButtonUticniceOznaciSveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUticniceOznaciSveActionPerformed
        if (oznaciSve) {
            jCheckBoxUticniceLampica.setSelected(oznaciSve);
            jCheckBoxUticniceSteker.setSelected(oznaciSve);
            oznaciSve = false;
        }

        else{
            jCheckBoxUticniceLampica.setSelected(oznaciSve);
            jCheckBoxUticniceSteker.setSelected(oznaciSve);
            oznaciSve = true;
        }
    }//GEN-LAST:event_jButtonUticniceOznaciSveActionPerformed

    private void jButtonUticniceIskljuciOznaceneUticniceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUticniceIskljuciOznaceneUticniceActionPerformed
        Tajmer oznaceniUredjaj = new Tajmer(0, 0, "");

        if (jCheckBoxUticniceLampica.isSelected() || jCheckBoxUticniceSteker.isSelected()) {
            oznaceniUredjaj.provjeraRezultata("Isključivanje označenih uređaja!", 1);
        }

        else{
            oznaceniUredjaj.provjeraRezultata("Nije označen niti jedan uređaj!", 0);
        }
        if (jCheckBoxUticniceLampica.isSelected()) {
            oznaceniUredjaj.setNaredba("LampicaOFFWH");
            oznaceniUredjaj.izvrsi();
        }

        if (jCheckBoxUticniceSteker.isSelected()) {
            oznaceniUredjaj.setNaredba("StekerOFFWH");
            oznaceniUredjaj.izvrsi();
        }
    }//GEN-LAST:event_jButtonUticniceIskljuciOznaceneUticniceActionPerformed

    private void jButtonUticniceUkljuciOznaceneUticniceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUticniceUkljuciOznaceneUticniceActionPerformed

        Tajmer oznaceniUredjaj = new Tajmer(0, 0, "");

        if (jCheckBoxUticniceLampica.isSelected() || jCheckBoxUticniceSteker.isSelected()) {
            oznaceniUredjaj.provjeraRezultata("Uključivanje označenih uređaja!", 1);
        }

        else{
            oznaceniUredjaj.provjeraRezultata("Nije označen niti jedan uređaj!", 0);
        }

        if (jCheckBoxUticniceLampica.isSelected()) {
            oznaceniUredjaj.setNaredba("LampicaONWH");
            oznaceniUredjaj.izvrsi();
        }

        if (jCheckBoxUticniceSteker.isSelected()) {
            oznaceniUredjaj.setNaredba("StekerONWH");
            oznaceniUredjaj.izvrsi();
        }
    }//GEN-LAST:event_jButtonUticniceUkljuciOznaceneUticniceActionPerformed

    private void jButtonUticniceStekerPokreniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUticniceStekerPokreniActionPerformed

        //ako je dretva završila s radom, ponovno ju pokreće
        if (!dretva.isAlive()) {
            dretva.run();
        }

        //provjera jesu li upisani dobri parametri
        try{

            //stvaranje novog trajmera i dodavanje u listu za izvršavanje
            Tajmer tajmer = new Tajmer(Integer.parseInt(jTextUticniceStekerMin.getText()), Integer.parseInt(jTextUticniceStekerSec.getText()), buttonGroup2.getSelection().getActionCommand());
            listaTajmeraStekera.add(tajmer);
            tajmer.provjeraRezultata("Dodan tajmer: " + buttonGroup2.getSelection().getActionCommand(), 1);

        }

        //ako nisu upisani, javlja se porukom
        catch(Exception e){
            tajmerZaPoruke.provjeraRezultata("Upiši minute i sekunde brojkama!", 0);
        }
    }//GEN-LAST:event_jButtonUticniceStekerPokreniActionPerformed

    private void jButtonUticniceLampicaPokreniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUticniceLampicaPokreniActionPerformed

        //ako je dretva završila s radom, ponovno ju pokreće
        if (!dretva.isAlive()) {
            dretva.run();
        }

        //provjera jesu li upisani dobri parametri
        try{
            Tajmer tajmer = new Tajmer(Integer.parseInt(jTextUticniceLampicaMin.getText()), Integer.parseInt(jTextUticniceLampicaSec.getText()), buttonGroup1.getSelection().getActionCommand());
            listaTajmeraLampice.add(tajmer);
            tajmer.provjeraRezultata("Dodan tajmer: " + buttonGroup1.getSelection().getActionCommand(), 1);

        }

        //ako nisu upisani, javlja se porukom
        catch(Exception e){
            tajmerZaPoruke.provjeraRezultata("Upiši minute i sekunde brojkama!", 0);
        }
    }//GEN-LAST:event_jButtonUticniceLampicaPokreniActionPerformed

    private void jButtonTajmeriObrisiTajmereZaruljeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTajmeriObrisiTajmereZaruljeActionPerformed
        for (Iterator<Tajmer> iterator = listaTajmeraZarulje.iterator(); iterator.hasNext();) {
            iterator.next();
            iterator.remove();
        }

        if (listaTajmeraZarulje.isEmpty()) {
            tajmerZaPoruke.provjeraRezultata("Obrisani tajmeri žarulje!", 1);
        }
        else{
            tajmerZaPoruke.provjeraRezultata("Tajmeri žarulje nisu obrisani!", 0);
        }
    }//GEN-LAST:event_jButtonTajmeriObrisiTajmereZaruljeActionPerformed

    private void jButtonTajmeriObrisiTajmereLampiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTajmeriObrisiTajmereLampiceActionPerformed
        for (Iterator<Tajmer> iterator = listaTajmeraLampice.iterator(); iterator.hasNext();) {
            iterator.next();
            iterator.remove();
        }

        if (listaTajmeraLampice.isEmpty()) {
            tajmerZaPoruke.provjeraRezultata("Obrisani tajmeri lampice!", 1);
        }
        else{
            tajmerZaPoruke.provjeraRezultata("Tajmeri lampice nisu obrisani!", 0);
        }
    }//GEN-LAST:event_jButtonTajmeriObrisiTajmereLampiceActionPerformed

    private void jButtonTajmeriObrisiTajmereStekeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTajmeriObrisiTajmereStekeraActionPerformed
        for (Iterator<Tajmer> iterator = listaTajmeraStekera.iterator(); iterator.hasNext();) {
            iterator.next();
            iterator.remove();
        }

        if (listaTajmeraStekera.isEmpty()) {
            tajmerZaPoruke.provjeraRezultata("Obrisani tajmeri štekera!", 1);
        }
        else{
            tajmerZaPoruke.provjeraRezultata("Tajmeri štekera nisu obrisani!", 0);
        }
    }//GEN-LAST:event_jButtonTajmeriObrisiTajmereStekeraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        dretva.start();
        listaListaTajmera.add(listaTajmeraLampice);
        listaListaTajmera.add(listaTajmeraStekera);
        listaListaTajmera.add(listaTajmeraMasine);
        listaListaTajmera.add(listaTajmeraZarulje);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pocetna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pocetna().setVisible(true);
                
            }
        });
    }
    
    /**
     * 
     * @param datumZaPrikaz
     */
    public static void prikazLabelOdabraniDan(Date datumZaPrikaz) {
        getjLabelOdabraniDatum().setText("Prikaz događaja za " + datumZaPrikaz + "datum:");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButtonDanas;
    private javax.swing.JButton jButtonMasinaPokreni;
    private javax.swing.JButton jButtonOsvjezi;
    private javax.swing.JButton jButtonPrijasnjiMjesec;
    private static java.awt.Button jButtonRasvjetaZaruljaOdabirBoje;
    private javax.swing.JButton jButtonRasvjetaZaruljaPokreni;
    private javax.swing.JButton jButtonSljedeciMjesec;
    private javax.swing.JButton jButtonTajmeriObrisiTajmereLampice;
    private javax.swing.JButton jButtonTajmeriObrisiTajmereStekera;
    private javax.swing.JButton jButtonTajmeriObrisiTajmereZarulje;
    private javax.swing.JButton jButtonUticniceIskljuciOznaceneUticnice;
    protected javax.swing.JButton jButtonUticniceLampicaPokreni;
    private javax.swing.JButton jButtonUticniceOznaciSve;
    private javax.swing.JButton jButtonUticniceStekerPokreni;
    private javax.swing.JButton jButtonUticniceUkljuciOznaceneUticnice;
    private javax.swing.JCheckBox jCheckBoxRasvjetaZarulja;
    private javax.swing.JCheckBox jCheckBoxUticniceLampica;
    private javax.swing.JCheckBox jCheckBoxUticniceMasina;
    private javax.swing.JCheckBox jCheckBoxUticniceSteker;
    private javax.swing.JComboBox<String> jComboBoxMjeseci;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private static javax.swing.JLabel jLabelOdabraniDatum;
    private static javax.swing.JPanel jPanePrognoza;
    private static javax.swing.JPanel jPanelDanas;
    private javax.swing.JPanel jPanelLog;
    private javax.swing.JPanel jPanelRasvjeta;
    private javax.swing.JPanel jPanelTajmeri;
    private javax.swing.JPanel jPanelUticnice;
    private javax.swing.JRadioButton jRadioButtonRasvjetaZaruljaOFF;
    private javax.swing.JRadioButton jRadioButtonRasvjetaZaruljaON;
    public static javax.swing.JRadioButton jRadioButtonUticniceLampicaOFF;
    public static javax.swing.JRadioButton jRadioButtonUticniceLampicaON;
    private javax.swing.JRadioButton jRadioButtonUticniceMasinaOFF;
    private javax.swing.JRadioButton jRadioButtonUticniceMasinaON;
    private javax.swing.JRadioButton jRadioButtonUticniceStekerOFF;
    private javax.swing.JRadioButton jRadioButtonUticniceStekerON;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPaneLog;
    private static javax.swing.JTable jTableKalendar;
    public static javax.swing.JTable jTableLogTablicaLoga;
    private static javax.swing.JTable jTableTablicaDogadaja;
    private static javax.swing.JTable jTableTablicaDogadajaZaTjedanDana;
    public static javax.swing.JTable jTableTajmeriTablicaTajmera;
    public static javax.swing.JTextField jTextFieldDanasnjiDatum;
    private static javax.swing.JTextField jTextFieldGodina;
    public static javax.swing.JTextField jTextFieldPoruka;
    private javax.swing.JTextField jTextFieldUticniceMasinaMin;
    private javax.swing.JTextField jTextFieldUticniceMasinaSec;
    private javax.swing.JTextField jTextRasvjetaZaruljaMin;
    private javax.swing.JTextField jTextRasvjetaZaruljaSec;
    private javax.swing.JTextField jTextUticniceLampicaMin;
    private javax.swing.JTextField jTextUticniceLampicaSec;
    private javax.swing.JTextField jTextUticniceStekerMin;
    private javax.swing.JTextField jTextUticniceStekerSec;
    // End of variables declaration//GEN-END:variables

    public static JTable getjTableKalendar() {
        return jTableKalendar;
    }

    public static JTextField getjTextFieldGodina() {
        return jTextFieldGodina;
    }

    public void setjTextFieldGodina(JTextField jTextFieldGodina) {
        Pocetna.jTextFieldGodina = jTextFieldGodina;
    }
    
    public Date getDanasnjiDatum() {
        return danasnjiDatum;
    }

    public void setDanasnjiDatum(Date danasnjiDatum) {
        this.danasnjiDatum = danasnjiDatum;
    }

    public static void setListaListaDogadaja(List<List<Datum>> listaListaDogadaja) {
        Pocetna.listaListaDatuma = listaListaDogadaja;
    }

    public static List<List<Datum>> getListaListaDatuma() {
        return listaListaDatuma;
    }

    public static void setListaListaDatuma(List<List<Datum>> listaListaDatuma) {
        Pocetna.listaListaDatuma = listaListaDatuma;
    }

    public static JTextField getjTextFieldPoruka() {
        return jTextFieldPoruka;
    }

    public static JLabel getjLabelOdabraniDatum() {
        return jLabelOdabraniDatum;
    }

    public static JTable getjTableTablicaDogadaja() {
        return jTableTablicaDogadaja;
    }

    public static JTable getjTableTablicaDogadajaZaTjedanDana() {
        return jTableTablicaDogadajaZaTjedanDana;
    }

    public int getTekucaGodina() {
        return tekucaGodina;
    }

    public JButton getjButtonDanas() {
        return jButtonDanas;
    }

    public JButton getjButtonOsvjezi() {
        return jButtonOsvjezi;
    }

    public JButton getjButtonPrijasnjiMjesec() {
        return jButtonPrijasnjiMjesec;
    }

    public JButton getjButtonSljedeciMjesec() {
        return jButtonSljedeciMjesec;
    }

    public JComboBox<String> getjComboBoxMjeseci() {
        return jComboBoxMjeseci;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public JScrollPane getjScrollPane2() {
        return jScrollPane2;
    }

    public JScrollPane getjScrollPane3() {
        return jScrollPane3;
    }

    public static JTextField getjTextFieldDanasnjiDatum() {
        return jTextFieldDanasnjiDatum;
    }

    public static JPanel getjPanePrognoza() {
        return jPanePrognoza;
    }

    public static JPanel getjPanelDanas() {
        return jPanelDanas;
    }

    public Tajmer getTajmerZaPoruke() {
        return tajmerZaPoruke;
    }

    public void setTajmerZaPoruke(Tajmer tajmerZaPoruke) {
        this.tajmerZaPoruke = tajmerZaPoruke;
    }

    public boolean isLampicaUkljucena() {
        return lampicaUkljucena;
    }

    public void setLampicaUkljucena(boolean lampicaUkljucena) {
        this.lampicaUkljucena = lampicaUkljucena;
    }

    public boolean isOznaciSve() {
        return oznaciSve;
    }

    public void setOznaciSve(boolean oznaciSve) {
        this.oznaciSve = oznaciSve;
    }

    public static List<List<Tajmer>> getListaListaTajmera() {
        return listaListaTajmera;
    }

    public static void setListaListaTajmera(List<List<Tajmer>> listaListaTajmera) {
        Pocetna.listaListaTajmera = listaListaTajmera;
    }

    public static List<Tajmer> getListaTajmeraLampice() {
        return listaTajmeraLampice;
    }

    public static void setListaTajmeraLampice(List<Tajmer> listaTajmeraLampice) {
        Pocetna.listaTajmeraLampice = listaTajmeraLampice;
    }

    public static List<Tajmer> getListaTajmeraStekera() {
        return listaTajmeraStekera;
    }

    public static void setListaTajmeraStekera(List<Tajmer> listaTajmeraStekera) {
        Pocetna.listaTajmeraStekera = listaTajmeraStekera;
    }

    public static List<Tajmer> getListaTajmeraMasine() {
        return listaTajmeraMasine;
    }

    public static void setListaTajmeraMasine(List<Tajmer> listaTajmeraMasine) {
        Pocetna.listaTajmeraMasine = listaTajmeraMasine;
    }

    public static List<Tajmer> getListaTajmeraZarulje() {
        return listaTajmeraZarulje;
    }

    public static void setListaTajmeraZarulje(List<Tajmer> listaTajmeraZarulje) {
        Pocetna.listaTajmeraZarulje = listaTajmeraZarulje;
    }

    public static DretvaIzvrsavanjeRemote getDretva() {
        return dretva;
    }

    public static void setDretva(DretvaIzvrsavanjeRemote dretva) {
        Pocetna.dretva = dretva;
    }

    public ButtonGroup getButtonGroup1() {
        return buttonGroup1;
    }

    public void setButtonGroup1(ButtonGroup buttonGroup1) {
        this.buttonGroup1 = buttonGroup1;
    }

    public ButtonGroup getButtonGroup2() {
        return buttonGroup2;
    }

    public void setButtonGroup2(ButtonGroup buttonGroup2) {
        this.buttonGroup2 = buttonGroup2;
    }

    public ButtonGroup getButtonGroup3() {
        return buttonGroup3;
    }

    public void setButtonGroup3(ButtonGroup buttonGroup3) {
        this.buttonGroup3 = buttonGroup3;
    }

    public ButtonGroup getButtonGroup4() {
        return buttonGroup4;
    }

    public void setButtonGroup4(ButtonGroup buttonGroup4) {
        this.buttonGroup4 = buttonGroup4;
    }

    public JButton getjButtonMasinaPokreni() {
        return jButtonMasinaPokreni;
    }

    public void setjButtonMasinaPokreni(JButton jButtonMasinaPokreni) {
        this.jButtonMasinaPokreni = jButtonMasinaPokreni;
    }

    public static Button getjButtonRasvjetaZaruljaOdabirBoje() {
        return jButtonRasvjetaZaruljaOdabirBoje;
    }

    public void setjButtonRasvjetaZaruljaOdabirBoje(Button jButtonRasvjetaZaruljaOdabirBoje) {
        this.jButtonRasvjetaZaruljaOdabirBoje = jButtonRasvjetaZaruljaOdabirBoje;
    }

    public JButton getjButtonRasvjetaZaruljaPokreni() {
        return jButtonRasvjetaZaruljaPokreni;
    }

    public void setjButtonRasvjetaZaruljaPokreni(JButton jButtonRasvjetaZaruljaPokreni) {
        this.jButtonRasvjetaZaruljaPokreni = jButtonRasvjetaZaruljaPokreni;
    }

    public JButton getjButtonTajmeriObrisiTajmereLampice() {
        return jButtonTajmeriObrisiTajmereLampice;
    }

    public void setjButtonTajmeriObrisiTajmereLampice(JButton jButtonTajmeriObrisiTajmereLampice) {
        this.jButtonTajmeriObrisiTajmereLampice = jButtonTajmeriObrisiTajmereLampice;
    }

    public JButton getjButtonTajmeriObrisiTajmereStekera() {
        return jButtonTajmeriObrisiTajmereStekera;
    }

    public void setjButtonTajmeriObrisiTajmereStekera(JButton jButtonTajmeriObrisiTajmereStekera) {
        this.jButtonTajmeriObrisiTajmereStekera = jButtonTajmeriObrisiTajmereStekera;
    }

    public JButton getjButtonTajmeriObrisiTajmereZarulje() {
        return jButtonTajmeriObrisiTajmereZarulje;
    }

    public void setjButtonTajmeriObrisiTajmereZarulje(JButton jButtonTajmeriObrisiTajmereZarulje) {
        this.jButtonTajmeriObrisiTajmereZarulje = jButtonTajmeriObrisiTajmereZarulje;
    }

    public JButton getjButtonUticniceIskljuciOznaceneUticnice() {
        return jButtonUticniceIskljuciOznaceneUticnice;
    }

    public void setjButtonUticniceIskljuciOznaceneUticnice(JButton jButtonUticniceIskljuciOznaceneUticnice) {
        this.jButtonUticniceIskljuciOznaceneUticnice = jButtonUticniceIskljuciOznaceneUticnice;
    }

    public JButton getjButtonUticniceLampicaPokreni() {
        return jButtonUticniceLampicaPokreni;
    }

    public void setjButtonUticniceLampicaPokreni(JButton jButtonUticniceLampicaPokreni) {
        this.jButtonUticniceLampicaPokreni = jButtonUticniceLampicaPokreni;
    }

    public JButton getjButtonUticniceOznaciSve() {
        return jButtonUticniceOznaciSve;
    }

    public void setjButtonUticniceOznaciSve(JButton jButtonUticniceOznaciSve) {
        this.jButtonUticniceOznaciSve = jButtonUticniceOznaciSve;
    }

    public JButton getjButtonUticniceStekerPokreni() {
        return jButtonUticniceStekerPokreni;
    }

    public void setjButtonUticniceStekerPokreni(JButton jButtonUticniceStekerPokreni) {
        this.jButtonUticniceStekerPokreni = jButtonUticniceStekerPokreni;
    }

    public JButton getjButtonUticniceUkljuciOznaceneUticnice() {
        return jButtonUticniceUkljuciOznaceneUticnice;
    }

    public void setjButtonUticniceUkljuciOznaceneUticnice(JButton jButtonUticniceUkljuciOznaceneUticnice) {
        this.jButtonUticniceUkljuciOznaceneUticnice = jButtonUticniceUkljuciOznaceneUticnice;
    }

    public JCheckBox getjCheckBoxRasvjetaZarulja() {
        return jCheckBoxRasvjetaZarulja;
    }

    public void setjCheckBoxRasvjetaZarulja(JCheckBox jCheckBoxRasvjetaZarulja) {
        this.jCheckBoxRasvjetaZarulja = jCheckBoxRasvjetaZarulja;
    }

    public JCheckBox getjCheckBoxUticniceLampica() {
        return jCheckBoxUticniceLampica;
    }

    public void setjCheckBoxUticniceLampica(JCheckBox jCheckBoxUticniceLampica) {
        this.jCheckBoxUticniceLampica = jCheckBoxUticniceLampica;
    }

    public JCheckBox getjCheckBoxUticniceMasina() {
        return jCheckBoxUticniceMasina;
    }

    public void setjCheckBoxUticniceMasina(JCheckBox jCheckBoxUticniceMasina) {
        this.jCheckBoxUticniceMasina = jCheckBoxUticniceMasina;
    }

    public JCheckBox getjCheckBoxUticniceSteker() {
        return jCheckBoxUticniceSteker;
    }

    public void setjCheckBoxUticniceSteker(JCheckBox jCheckBoxUticniceSteker) {
        this.jCheckBoxUticniceSteker = jCheckBoxUticniceSteker;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JLabel getjLabel4() {
        return jLabel4;
    }

    public void setjLabel4(JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    public JLabel getjLabel5() {
        return jLabel5;
    }

    public void setjLabel5(JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    public JLabel getjLabel6() {
        return jLabel6;
    }

    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    public JPanel getjPanelLog() {
        return jPanelLog;
    }

    public void setjPanelLog(JPanel jPanelLog) {
        this.jPanelLog = jPanelLog;
    }

    public JPanel getjPanelRasvjeta() {
        return jPanelRasvjeta;
    }

    public void setjPanelRasvjeta(JPanel jPanelRasvjeta) {
        this.jPanelRasvjeta = jPanelRasvjeta;
    }

    public JPanel getjPanelTajmeri() {
        return jPanelTajmeri;
    }

    public void setjPanelTajmeri(JPanel jPanelTajmeri) {
        this.jPanelTajmeri = jPanelTajmeri;
    }

    public JPanel getjPanelUticnice() {
        return jPanelUticnice;
    }

    public void setjPanelUticnice(JPanel jPanelUticnice) {
        this.jPanelUticnice = jPanelUticnice;
    }

    public JRadioButton getjRadioButtonRasvjetaZaruljaOFF() {
        return jRadioButtonRasvjetaZaruljaOFF;
    }

    public void setjRadioButtonRasvjetaZaruljaOFF(JRadioButton jRadioButtonRasvjetaZaruljaOFF) {
        this.jRadioButtonRasvjetaZaruljaOFF = jRadioButtonRasvjetaZaruljaOFF;
    }

    public JRadioButton getjRadioButtonRasvjetaZaruljaON() {
        return jRadioButtonRasvjetaZaruljaON;
    }

    public void setjRadioButtonRasvjetaZaruljaON(JRadioButton jRadioButtonRasvjetaZaruljaON) {
        this.jRadioButtonRasvjetaZaruljaON = jRadioButtonRasvjetaZaruljaON;
    }

    public JRadioButton getjRadioButtonUticniceMasinaOFF() {
        return jRadioButtonUticniceMasinaOFF;
    }

    public void setjRadioButtonUticniceMasinaOFF(JRadioButton jRadioButtonUticniceMasinaOFF) {
        this.jRadioButtonUticniceMasinaOFF = jRadioButtonUticniceMasinaOFF;
    }

    public JRadioButton getjRadioButtonUticniceMasinaON() {
        return jRadioButtonUticniceMasinaON;
    }

    public void setjRadioButtonUticniceMasinaON(JRadioButton jRadioButtonUticniceMasinaON) {
        this.jRadioButtonUticniceMasinaON = jRadioButtonUticniceMasinaON;
    }

    public JRadioButton getjRadioButtonUticniceStekerOFF() {
        return jRadioButtonUticniceStekerOFF;
    }

    public void setjRadioButtonUticniceStekerOFF(JRadioButton jRadioButtonUticniceStekerOFF) {
        this.jRadioButtonUticniceStekerOFF = jRadioButtonUticniceStekerOFF;
    }

    public JRadioButton getjRadioButtonUticniceStekerON() {
        return jRadioButtonUticniceStekerON;
    }

    public void setjRadioButtonUticniceStekerON(JRadioButton jRadioButtonUticniceStekerON) {
        this.jRadioButtonUticniceStekerON = jRadioButtonUticniceStekerON;
    }

    public JScrollPane getjScrollPane5() {
        return jScrollPane5;
    }

    public void setjScrollPane5(JScrollPane jScrollPane5) {
        this.jScrollPane5 = jScrollPane5;
    }

    public JScrollPane getjScrollPane6() {
        return jScrollPane6;
    }

    public void setjScrollPane6(JScrollPane jScrollPane6) {
        this.jScrollPane6 = jScrollPane6;
    }

    public JTabbedPane getjTabbedPaneLog() {
        return jTabbedPaneLog;
    }

    public void setjTabbedPaneLog(JTabbedPane jTabbedPaneLog) {
        this.jTabbedPaneLog = jTabbedPaneLog;
    }

    public JTextField getjTextFieldUticniceMasinaMin() {
        return jTextFieldUticniceMasinaMin;
    }

    public void setjTextFieldUticniceMasinaMin(JTextField jTextFieldUticniceMasinaMin) {
        this.jTextFieldUticniceMasinaMin = jTextFieldUticniceMasinaMin;
    }

    public JTextField getjTextFieldUticniceMasinaSec() {
        return jTextFieldUticniceMasinaSec;
    }

    public void setjTextFieldUticniceMasinaSec(JTextField jTextFieldUticniceMasinaSec) {
        this.jTextFieldUticniceMasinaSec = jTextFieldUticniceMasinaSec;
    }

    public JTextField getjTextRasvjetaZaruljaMin() {
        return jTextRasvjetaZaruljaMin;
    }

    public void setjTextRasvjetaZaruljaMin(JTextField jTextRasvjetaZaruljaMin) {
        this.jTextRasvjetaZaruljaMin = jTextRasvjetaZaruljaMin;
    }

    public JTextField getjTextRasvjetaZaruljaSec() {
        return jTextRasvjetaZaruljaSec;
    }

    public void setjTextRasvjetaZaruljaSec(JTextField jTextRasvjetaZaruljaSec) {
        this.jTextRasvjetaZaruljaSec = jTextRasvjetaZaruljaSec;
    }

    public JTextField getjTextUticniceLampicaMin() {
        return jTextUticniceLampicaMin;
    }

    public void setjTextUticniceLampicaMin(JTextField jTextUticniceLampicaMin) {
        this.jTextUticniceLampicaMin = jTextUticniceLampicaMin;
    }

    public JTextField getjTextUticniceLampicaSec() {
        return jTextUticniceLampicaSec;
    }

    public void setjTextUticniceLampicaSec(JTextField jTextUticniceLampicaSec) {
        this.jTextUticniceLampicaSec = jTextUticniceLampicaSec;
    }

    public JTextField getjTextUticniceStekerMin() {
        return jTextUticniceStekerMin;
    }

    public void setjTextUticniceStekerMin(JTextField jTextUticniceStekerMin) {
        this.jTextUticniceStekerMin = jTextUticniceStekerMin;
    }

    public JTextField getjTextUticniceStekerSec() {
        return jTextUticniceStekerSec;
    }

    public void setjTextUticniceStekerSec(JTextField jTextUticniceStekerSec) {
        this.jTextUticniceStekerSec = jTextUticniceStekerSec;
    }

    public JRadioButton getjRadioButtonUticniceLampicaOFF() {
        return jRadioButtonUticniceLampicaOFF;
    }

    public void setjRadioButtonUticniceLampicaOFF(JRadioButton jRadioButtonUticniceLampicaOFF) {
        this.jRadioButtonUticniceLampicaOFF = jRadioButtonUticniceLampicaOFF;
    }

    public JRadioButton getjRadioButtonUticniceLampicaON() {
        return jRadioButtonUticniceLampicaON;
    }

    public void setjRadioButtonUticniceLampicaON(JRadioButton jRadioButtonUticniceLampicaON) {
        this.jRadioButtonUticniceLampicaON = jRadioButtonUticniceLampicaON;
    }

    public static JTable getjTableLogTablicaLoga() {
        return jTableLogTablicaLoga;
    }

    public void setjTableLogTablicaLoga(JTable jTableLogTablicaLoga) {
        this.jTableLogTablicaLoga = jTableLogTablicaLoga;
    }

    public static JTable getjTableTajmeriTablicaTajmera() {
        return jTableTajmeriTablicaTajmera;
    }

    public void setjTableTajmeriTablicaTajmera(JTable jTableTajmeriTablicaTajmera) {
        this.jTableTajmeriTablicaTajmera = jTableTajmeriTablicaTajmera;
    }
}
